# --------------------------------------------------------------
# We are building out a flask-only application 
# with a few few routes to demonstrate some 
# functionality
#
# We will build it up into 
# --------------------------------------------------------------

services:

  # The Api service represents the REST API. 
  # Inside the api/ folder, you'll find a 
  # Dockerfile that sets up that container 
  # specifically
  api:

    # Uses the Dockerfile inside the ./api folder
    # to build an image contain all the libraries
    # you'll need to run a Flask app.
    build: ./api

    # Give the Docker image is being built a 
    # specific name so we can recognize it in 
    # Docker Desktop
    image: flask-test-api

    # Gives the name of the Docker Container being created
    # based on the above image a particular name
    container_name: flask01-web-api

    # Gives the container a specific host name.  You can 
    # largely ignore this
    hostname: web-api

    # Maps the api/ folder in the project folder into the container.
    # Inside the container, it will appear as though the folder name
    # is called /apicode, which we set as the working directory
    # in api/Dockerfile
    volumes: ['./api:/apicode']

    # Mapping Port 4000 exposed by container to the host machine's
    # (your laptop's) port 4000. 
    ports:
      - 4000:4000




